name: java-ci-with-maven

on:
  push:
    branches: [master]

jobs:
  java-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "adopt"

      - name: Maven Build
        run: mvn -B package -Pcoverage

      - run: ls ./target

      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          badges-directory: badges
          generate-branches-badge: true
          generate-summary: true

      - name: Upload JaCoCo coverage as workflow artifactko
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-report
          path: ./target/site/jacoco/

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: 7a754c2f0eefd674b5f08f51ea207fd7e049c0c4
          SONAR_HOST_URL: https://sonarcloud.io

      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 4
        env:
          SONAR_TOKEN: 7a754c2f0eefd674b5f08f51ea207fd7e049c0c4

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: java-springboot-todo-1.0.0-SNAPSHOT.war
          path: ./target/java-springboot-todo-1.0.0-SNAPSHOT.war

      - name: Build and Push Docker Image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: sbathuru/java-springboot-todo
          tags: 1.0.179, latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Send Email
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
          # email body as text
          body: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
          # comma-separated string, send email to
          to: srinivas.bathuru@gmail.com
          # from email name
          from: srinivas.bathuru@gmail.com
